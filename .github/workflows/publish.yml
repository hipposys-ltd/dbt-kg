name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      dbt_graph_loader: ${{ steps.filter.outputs.dbt_graph_loader == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures that the full history is fetched

      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            dbt_graph_loader:
              - 'dbt_graph_loader/**/*'
              - 'pyproject.toml'
              - 'poetry.lock'  

  publish_dbt_graph_loader:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.dbt_graph_loader == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: poetry build

      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish -u __token__ -p $PYPI_TOKEN


